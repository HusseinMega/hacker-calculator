name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            openjdk-17-jdk \
            unzip \
            wget \
            autoconf \
            automake \
            libtool \
            pkg-config

      - name: Install Buildozer and Cython
        run: |
          pip install --upgrade pip
          pip install buildozer cython==0.29.33

      - name: Setup Android SDK and NDK
        run: |
          # إنشاء مجلد Android SDK
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          
          # تحميل Android Command Line Tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip
          mv cmdline-tools latest
          
          # تعيين متغيرات البيئة
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
          
          # قبول التراخيص
          yes | sdkmanager --licenses || true
          
          # تثبيت Build Tools إصدار مستقر
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"
          
          # حفظ المتغيرات للخطوات التالية
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Update buildozer.spec for compatibility
        run: |
          # تحديث buildozer.spec لاستخدام إصدارات مستقرة
          if [ -f buildozer.spec ]; then
            sed -i 's/android.api = .*/android.api = 33/' buildozer.spec
            sed -i 's/android.minapi = .*/android.minapi = 21/' buildozer.spec
            sed -i 's/android.ndk = .*/android.ndk = 25.2.9519653/' buildozer.spec
            sed -i 's/android.sdk = .*/android.sdk = 33/' buildozer.spec
            sed -i 's/android.accept_sdk_license = .*/android.accept_sdk_license = True/' buildozer.spec
            
            # إضافة السطر إذا لم يكن موجوداً
            if ! grep -q "android.accept_sdk_license" buildozer.spec; then
              echo "android.accept_sdk_license = True" >> buildozer.spec
            fi
          fi

      - name: Cache Buildozer directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}-v2
          restore-keys: |
            buildozer-

      - name: Build with Buildozer
        run: |
          # التأكد من وجود المتغيرات
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2
          
          # بناء APK
          buildozer android debug || (cat .buildozer/android/platform/build-*/log/*.log && exit 1)

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: bin/*.apk
          if-no-files-found: warn

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: .buildozer/android/platform/build-*/log/*.log
          if-no-files-found: ignore
