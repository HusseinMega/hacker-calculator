name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            openjdk-17-jdk \
            unzip \
            wget \
            autoconf \
            automake \
            libtool \
            pkg-config

      - name: Install Buildozer and Cython
        run: |
          pip install --upgrade pip
          pip install buildozer cython==0.29.33

      - name: Setup Android SDK and NDK
        run: |
          # إنشاء مجلد Android SDK
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          
          # تحميل Android Command Line Tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip
          mv cmdline-tools latest
          
          # تعيين متغيرات البيئة
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
          
          # قبول التراخيص
          yes | sdkmanager --licenses || true
          
          # تثبيت Build Tools وNDK إصدار 25b (متوافق مع buildozer.spec)
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"
          
          # حفظ المتغيرات للخطوات التالية
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/33.0.2" >> $GITHUB_PATH

      - name: Fix duplicate entries in buildozer.spec
        run: |
          echo "=== Fixing buildozer.spec duplicates ==="
          if [ -f buildozer.spec ]; then
            # إزالة الأسطر المكررة مع الحفاظ على الترتيب
            awk '!seen[$0]++' buildozer.spec > buildozer.spec.tmp
            mv buildozer.spec.tmp buildozer.spec
            
            # التحقق من الإعدادات
            echo "=== Checking buildozer.spec settings ==="
            grep "android.api" buildozer.spec || echo "⚠️ android.api not found"
            grep "android.minapi" buildozer.spec || echo "⚠️ android.minapi not found"
            grep "android.ndk" buildozer.spec || echo "⚠️ android.ndk not found"
            grep "android.accept_sdk_license" buildozer.spec || echo "⚠️ android.accept_sdk_license not found"
            echo "=== buildozer.spec verification complete ==="
          else
            echo "❌ buildozer.spec file not found!"
            exit 1
          fi

      - name: Cache Buildozer directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}-v3
          restore-keys: |
            buildozer-

      - name: Build with Buildozer
        run: |
          # التأكد من وجود المتغيرات
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2
          
          # عرض معلومات البيئة
          echo "=== Environment Info ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
          echo "Python version: $(python --version)"
          echo "Buildozer version: $(buildozer --version)"
          
          # بناء APK
          echo "=== Starting APK Build ==="
          buildozer -v android debug || (echo "=== Build Failed - Showing Logs ===" && cat .buildozer/android/platform/build-*/log/*.log 2>/dev/null && exit 1)

      - name: List generated files
        if: success()
        run: |
          echo "=== Checking for APK files ==="
          ls -lh bin/ || echo "bin/ directory not found"
          find . -name "*.apk" -type f

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: HackerCalculator-APK
          path: bin/*.apk
          if-no-files-found: warn

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer/android/platform/build-*/log/*.log
            .buildozer/android/logs/*.log
          if-no-files-found: ignore
